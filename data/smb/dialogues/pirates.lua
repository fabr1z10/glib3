-- lookout dialogue

dialoguesPirates = {}

local d = strings.dialogues.pirates.text


function dialoguesPirates.getlost(l) 

	 s = Script.create("_dial")
	 s:add (say { character = "guybrush", lines = { d[l] } })
	 s:add (say { character="ilp1", lines = {d[5]}, animstart = "talk", animend="idle" })
	 s:add ({{ type = "callfunc", func = resumePlay }})
	 s:setsequence()
	 return s
end

function dialoguesPirates.iwanttobeapirate()
	 s = Script.create("_dial")
	 s:add (say { character = "guybrush", lines = { d[3] } })
	 s:add (say { character="ilp1", lines = {d[6]}, animstart = "talk", animend="idle" })
	 s:add (say { character="ilp2", lines = {d[7]}, animstart = "talk", animend="idle" })
     s:add (say { character="ilp3", lines = {d[8]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp1", lines = {d[9]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp3", lines = {d[10]}, animstart = "talk", animend="idle" })
     s:add (say { character="ilp1", lines = {d[11]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp1", lines = {d[12]}, animstart = "talk", animend="idle" }) 
	 s:add (say { character = "guybrush", lines = { d[13] } })
     s:add (say { character="ilp1", lines = {d[14]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp1", lines = {d[15]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp3", lines = {d[16]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp1", lines = {d[17]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp2", lines = {d[17]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp3", lines = {d[17]}, animstart = "talk", animend="idle" }) 
	 s:add (say { character = "guybrush", lines = { d[18], d[19] } })
     s:add (say { character="ilp2", lines = {d[20]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp1", lines = {d[21]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp2", lines = {d[22]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp3", lines = {d[23]}, animstart = "talk", animend="idle" })
     s:add (say { character="ilp2", lines = {d[24]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp3", lines = {d[25]}, animstart = "talk", animend="idle" })
     s:add (say { character="ilp2", lines = {d[26]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp2", lines = {d[27]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp2", lines = {d[28]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp2", lines = {d[29]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp1", lines = {d[30]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp1", lines = {d[31]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp2", lines = {d[31]}, animstart = "talk", animend="idle" }) 
     s:add (say { character="ilp3", lines = {d[31]}, animstart = "talk", animend="idle" }) 
	 s:add ({{ type = "callfunc", func = resumePlay }})

	table.insert(s.edges, {0,1})
	table.insert(s.edges, {1,2})
	table.insert(s.edges, {2,3})
	table.insert(s.edges, {3,4})
	table.insert(s.edges, {4,5})	
	table.insert(s.edges, {5,6})	
	table.insert(s.edges, {6,7})	
	table.insert(s.edges, {7,8})
	table.insert(s.edges, {8,9})
	table.insert(s.edges, {9,10})
	table.insert(s.edges, {10,11})
table.insert(s.edges, {11,12})
table.insert(s.edges, {11,13})
table.insert(s.edges, {11,14})
table.insert(s.edges, {12,15})
table.insert(s.edges, {13,15})
table.insert(s.edges, {14,15})
table.insert(s.edges, {15,16})
table.insert(s.edges, {16,17})
table.insert(s.edges, {17,18})
table.insert(s.edges, {18,19})
table.insert(s.edges, {19,20})
table.insert(s.edges, {20,21})
table.insert(s.edges, {21,22})
table.insert(s.edges, {22,23})
table.insert(s.edges, {23,24})
table.insert(s.edges, {24,25})
table.insert(s.edges, {25,26})
table.insert(s.edges, {26,27})
table.insert(s.edges, {26,28})
table.insert(s.edges, {26,29})
table.insert(s.edges, {27,30})
table.insert(s.edges, {28,30})
table.insert(s.edges, {29,30})

	 --s:setsequence()
	 return s

end