#pragma once

const char basic_vshader_light[] =
        "#version 330 core\n"
                "layout (location = 0) in vec3 position;\n"
                "layout (location = 1) in vec3 normal;\n"
                "layout (location = 2) in vec4 color;\n"
                "uniform mat4 modelMat;\n"
                "uniform mat4 viewMat;\n"
                "uniform mat4 ProjMat;\n"
                "out vec4 col;\n"
                "out vec3 Normal;\n"
                "out vec3 FragPos;\n"
                "void main()\n"
                "{\n"
                "FragPos = vec3(modelMat * vec4(position, 1.0));"
                "col = color;\n"
                "gl_Position = ProjMat * viewMat * vec4(FragPos, 1.0);\n"
                "Normal = mat3(transpose(inverse(modelMat))) * normal;\n"
                "}\n"
;
const char basic_fshader_light[] =
        "#version 330 core\n"
        "out vec4 FragColor;\n"
        "struct DirLight {"
        "    vec3 direction;"
        "    vec3 ambient;"
        "    vec3 diffuse;"
        "};"
        "in vec3 FragPos;\n"
        "in vec4 col;\n"
        "in vec3 Normal;\n"
        "uniform DirLight dirLight;\n"
        "void main()\n"
        "{\n"
        "    vec3 normal = normalize(Normal);\n"
        "    // phase 1: directional lighting\n"
        "    vec3 lightDir = normalize(-dirLight.direction);\n"
        "    // diffuse shading\n"
        "    float diff = max(dot(normal, lightDir), 0.0);\n"
        "    vec3 ambient = dirLight.ambient * vec3(col);\n"
        "    vec3 diffuse = dirLight.diffuse * diff * vec3(col);\n"
        "    vec3 result = diffuse; // (ambient + diffuse);\n"
        "    FragColor = vec4(result, 1.0);\n"
        "}\n"
;
